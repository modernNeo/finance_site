# Generated by Django 4.1.3 on 2022-12-03 23:32

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('price', models.FloatField()),
                ('purchase_target', models.CharField(choices=[('Me', 'Me'), ('Dawn', 'Dawn'), ('Mircea', 'Mircea')], default='Me', max_length=50)),
                ('waiting_for_reimbursement', models.BooleanField(default=False)),
                ('who_will_pay', models.CharField(choices=[('Me', 'Me'), ('Vena', 'Vena'), ('Micheal', 'Micheal'), ('Dawn', 'Dawn')], default='Me', max_length=50)),
                ('note', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='ItemLabel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='TransactionBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.DateField()),
                ('date', models.DateTimeField()),
                ('payment_method', models.CharField(choices=[('MasterCard', 'MasterCard'), ('Debit Card', 'Debit Card'), ('Paid by Dawn', 'Paid by Dawn')], default='MasterCard', max_length=50)),
                ('purchase_target', models.CharField(choices=[('Me', 'Me'), ('Dawn', 'Dawn'), ('Mircea', 'Mircea'), ('Group Purchase', 'Group Purchase')], default='Me', max_length=50)),
                ('who_will_pay', models.CharField(choices=[('Me', 'Me'), ('Vena', 'Vena'), ('Micheal', 'Micheal'), ('Dawn', 'Dawn'), ('Group Purchase', 'Group Purchase')], default='Me', max_length=50)),
                ('method_of_transaction', models.CharField(choices=[('ATM', 'ATM'), ('Chequing', 'Chequing'), ('Credit', 'Credit'), ('Debit', 'Debit'), ('Other', 'Other'), ('POS', 'POS')], default='Credit', max_length=200)),
                ('type', models.CharField(choices=[('Charge', 'Charge'), ('Refund', 'Refund'), ('Payment', 'Payment')], default='Charge', max_length=200)),
                ('name', models.CharField(max_length=500)),
                ('memo', models.CharField(max_length=500)),
                ('price', models.FloatField()),
                ('store', models.CharField(max_length=300)),
                ('receipt', models.FileField(upload_to='')),
                ('note', models.CharField(max_length=300)),
                ('processed', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='TransactionCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=300, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TransactionLabel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='LegacyTransaction',
            fields=[
                ('transactionbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='finance_site.transactionbase')),
                ('category', models.CharField(max_length=300)),
            ],
            bases=('finance_site.transactionbase',),
        ),
        migrations.CreateModel(
            name='PendingTransaction',
            fields=[
                ('transactionbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='finance_site.transactionbase')),
                ('category', models.CharField(max_length=300)),
            ],
            bases=('finance_site.transactionbase',),
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('transactionbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='finance_site.transactionbase')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='finance_site.transactioncategory')),
            ],
            bases=('finance_site.transactionbase',),
        ),
        migrations.CreateModel(
            name='ItemLabelIntersection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='finance_site.item')),
                ('label', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='finance_site.itemlabel')),
            ],
        ),
        migrations.AddField(
            model_name='item',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='finance_site.transactioncategory'),
        ),
        migrations.CreateModel(
            name='TransactionReimbursement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.CharField(max_length=500)),
                ('original_transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='get_reimbursement_transactions_set', to='finance_site.transaction')),
                ('reimbursement_transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='get_original_transaction_set', to='finance_site.transaction')),
            ],
        ),
        migrations.CreateModel(
            name='TransactionRefund',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='get_refund_transaction_set', to='finance_site.transaction')),
                ('refund_transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='get_original_transactions_set', to='finance_site.transaction')),
            ],
        ),
        migrations.CreateModel(
            name='TransactionPayBack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.CharField(max_length=500)),
                ('original_transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='get_transaction_paying_back_this_transaction_set', to='finance_site.transaction')),
                ('payback_transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='get_original_transaction_being_paid_back_set', to='finance_site.transaction')),
            ],
        ),
        migrations.CreateModel(
            name='TransactionLabelIntersection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='finance_site.transactionlabel')),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='finance_site.transaction')),
            ],
        ),
        migrations.CreateModel(
            name='ItemReimbursement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.CharField(max_length=500, null=True)),
                ('original_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='get_item_reimbursement_transactions_set', to='finance_site.item')),
                ('reimbursement_transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='get_original_reimbursed_item_set', to='finance_site.transaction')),
            ],
        ),
        migrations.CreateModel(
            name='ItemRefund',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='get_item_refund_transaction_set', to='finance_site.item')),
                ('refund_transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='get_original_refunded_item_set', to='finance_site.transaction')),
            ],
        ),
        migrations.CreateModel(
            name='ItemPayBack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.CharField(max_length=500)),
                ('original_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='get_transaction_paying_back_item_set', to='finance_site.item')),
                ('payback_transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='get_original_item_being_paid_back_set', to='finance_site.transaction')),
            ],
        ),
        migrations.AddField(
            model_name='item',
            name='transaction',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='finance_site.transaction'),
        ),
        migrations.CreateModel(
            name='ETransferToInternalTransferMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('e_transfer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='get_corresponding_internal_transfer_set', to='finance_site.transaction')),
                ('internal_transfer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='get_corresponding_e_transfer_set', to='finance_site.transaction')),
            ],
        ),
    ]
